/* la propiedad position tiene 5 posibles valores
-static (default)
-relative
-absolute
-fixed
-sticky

para mover los elementos posicionados se activan las siguientes propiedades:
-top(vertical-eje y)
-bottom(vertical-eje y)
-left(horizontal -eje x)
-right(horizontal -eje x)
-z-index(profundidad -eje z)

la propiedad top y left tienen prioridad sobre right y bottom
*/
.links a {
    margin: 32px;
}

.static {
    background-color: yellow;
    position: static;
}

/* en relative la caja se aleja de los margenes y respetan su lugar(posiciòn) */
.relative {
    background-color: aqua;
    position: relative;
    width: 300px;
    height: 50px;
    top: 50px;
    left: 50px;
}

/* el elemento pierde sus dimensiones y posiciòn original en el flujo del documento. si se mueve puede tomar como referencia 2 elementos:
1) ancestro con posicionamiento relativo
2)sino se encuentra un ancestros relativo, se mueve respecto al documento HTML
tenemos que darle las posiciones explicitamente */
.absolute {
    background-color: tomato;
    position: absolute;
    width: 200px;
    height: 50px;
    top: 0;
    left: 0;
}

/* fixed el elemento pierde sus dimenciones y posición original en el flujo del documento. si se mueve toma como referencia el documento html y queda fijo en la posición, cuando el scroll se mueva, el elemento no lo hará, queda fijo. */
.fixed {
    background-color: brown;
    width: 300px;
    height: 100px;
    right: 20px;
    bottom: 10px;
    top: 30px;
    left: 400px;
    position: fixed;
}

/* posicionamiento sticky es una combinacion de posicionamineto relative y fixed, para este posicionamiento las propiedades top, left, right y bottom no mueven el elemento sino que sirven como punto de referencia, mientras no llegue a ese valor el elemento se comporta como relativa,cuando llega se convierte en fixed.

Para que este comportamiento funcione el elemento sticky debe ser hijo directo del body o su elemento contenedor debe tener dimensiones definidas y solo sera sticky dentro de las dimensiones de su contenedor padre
*/

.sticky {
    background-color: lightskyblue;
    position: sticky;
    top: 20px;
}

.sticky-parent {
    border: thin dotted black;
    height: 200px;
}

.sticky-child {
    background-color: lightslategray;
    position: sticky;
    top: 65px;
}

/* Z-index nos permite controlar la profundidad del elemento, su valor por defecto es auto y acepta numeros positivos, negativos y cero.

A mayor valor el elemento esta màs al frente a menor valor màs atràs

Un elemento padre nunca podrà estar sobre sus elementos hijos, sin embargo los elementos hijos si pueden dàndoles un valor negativo
*/
.z-index-1,
.z-index-2 {
    background-color: mediumaquamarine;
    border: thin solid black;
    width: 200px;
    height: 200px;
    position: relative;
}

.z-index-1 {
    z-index: 1;
}

.z-index-2 {
    top: -200px;
    left: 100px;
    z-index: 2;
}

/* en el raro caso de que un elemento hijo este por detràs de un elemento padre se ocupa que el elemento padre no tenga zindex y el elemento hijo tenga zindex con valor negativo */
.z-index-parent{
    background-color: mediumorchid;
    width: 300px;
    height: 300px;
    position: relative;
}
.z-index-child{
    background-color: mediumvioletred;
    position: relative;
    width: 150px;
    height: 150px;
    top: -75px;
    left: 75px;
    z-index: -1;
}