/* reset */
html {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-size: 16px;
    background-color: #000;
}
*,
*::after,
*::before {
    box-sizing: inherit;
}
:root {
    --default-backgroud-color: #000;
    --default-color: #fff;
}
body {
    background-color: beige;
    margin: 0;
}

.header1 {
    background-color: rebeccapurple;
}
.links {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    margin: 0;
}
.links li {
    list-style: none;
}
.links li a {
    color: #fff;
    display: flex;
    padding: 16px;
    letter-spacing: 1px;
    font-weight: 300;
}

.links li a:hover {
    background-color: #fff;
    color: #000;
    border-radius: 50%;
    transition: all 0.5s ease-in-out;
}
.sticky-top {
    position: sticky;
    top: 0;
}

.color-by-name {
    background-color: coral;
    color: rebeccapurple;
    border: thick solid yellow;
}

/* RGB */
/* CMYK */

.color-hex {
    background-color: #ff6600;
    background-color: #ff660090; /*los ultimos dos digitos son la opacidad que van de 1 a 100 con el uso de 8 digitos y de 1 a 9 en el uso de 4 digitos*/
    color: rebeccapurple;
    border: thick solid #ffffff; /*ffffff es el extremo opuesto de 000000*/
    border: thick solid #ff0000; /*Dependiendo de la posicion de ff es el color*/
    border: thick solid #0f0; /*Se pueden simplificar a 3 digitos*/
    border: thick solid #0000ff; /*Siempre y cuando sean el mismo par de digitos*/
    border: thick solid #000000;
}

.color-rgb {
    background-color: rgb(255, 255, 255);
    background-color: rgb(255, 0, 0);
    background-color: rgb(0, 255, 0);
    background-color: rgb(0, 0, 255);
    background-color: rgb(0, 0, 0);
    background-color: rgba(
        0,
        0,
        0,
        0.5
    ); /* 'a' Agrega el canal alfa/opacidad que va de 0 a 100 xd*/
    border: thick solid rgb(128, 109, 7);
}

/* SISTEMA DE COLORES HSL HUGE-SATURATION-LIGHTNESS
El primer valor es Hue (circulo cromatico)
0· -> red
60· -> yellow
120· -> green
180· -> cyan
240· -> blue
300· -> magenta

el segundo valor es saturation(intensidad de color) se maneja por porcentajes:
100% -> color puro

el tercer valor es Lightness (la luminosidad del color):
0% -> color negro
50% -> color puro
100% -> color blanco
*/
.color-hsl {
    background-color: hsl(0, 100%, 50%);
    background-color: hsla(
        0,
        100%,
        50%,
        0.5
    ); /*Agregando el 'a' se aplica la opaciodad tambien es en porcentaje pero se maneja en decimales ejem, .5 === 50% */

    color: #fff;
    border: thick solid greenyellow;
}

/* CURRENT COLOR Y TRANSPARENT
transparent === rgba(0,0,0,0)
currentColor: hereda el valor por defecto asignado a la propiedad color del acentros que tenga definida esa propiedad, busca del ancestro màs cercano al màs alejado
*/
.color-trans-cur {
    background-color: magenta;
    background-color: currentColor;
    background-color: transparent;
    border: thick solid currentColor;
}

.opacity {
    background-color: orchid;
    color: navy;
    border: thick solid black;
    opacity: 0.5;
}

/* *** UNIDADES DE MEDIDA *** */
/*
Unidades de medida
1) absolutas (su valor no cambia, son unidades del mundo real)
pc,cm,mm,in,q
pt(1/72in)
px(1/96in)

2) relativas (su valor es relativo a un contexto)
em,rem,ex,ch -> al tamaño de la fuente
*) em -> basada en la anchura de la "m" de la fuente del elemento
*) rem -> basada en la anchura de la "m" de la fuente del elemento raìz(html)
*) ex -> basada en la altura de la "x" de la fuente del elemento
*) ch -> basada en la anchura del "0" de la fuente del elemento
*) % -> al tamaño del contenedor

3) vw,vh,vmin,vmax -> al tamaño del viewport
*) vw -> ancho del viewport va de 1 - 100
*) vh -> alto del viewport va de 1- 100
*) vmax -> entre vw y vh toma el que tenga mayor valor
*) vmin -> entre vw y vh toma el que tenga menor valor
*/

/* pixels */
.pixels {
    background-color: cadetblue;
    width: 500px;
    height: 400px;
    padding: 20px;
    border: thick solid rebeccapurple;
    font-size: 20px;
    font-family: sans-serif;
    word-spacing: 1px;
}

/* Ems */
.ems {
    background-color: cadetblue;
    border: thick solid rebeccapurple;
    font-size: 24px;
}

.em-child {
    background-color: salmon;
    border: thick solid beige;
    font-size: 2em; /*toma como referencia la base del contenedor padre en este caso '24px'*/
    margin: 0.5em; /*Tambien funciona para los margin*/
}

/* Rem
Hace referencia al font-size de html,sino se ha expresado explicitamente se toma el valor default 16px
*/
.rems {
    background-color: cadetblue;
    border: thick solid rebeccapurple;
    padding: 1rem 0.5rem;
    font-size: 24px;
}

.rem-child {
    background-color: salmon;
    border: thick solid beige;
    font-size: 2rem;
    padding: 1rem;
    margin: 0.5rem;
}

/* EX en la altura*/
.ex {
    background-color: cadetblue;
    border: thick solid rebeccapurple;
    padding: 1ex 0.5ex;
    font-size: 24px;
}

.ex-child {
    background-color: salmon;
    border: thick solid beige;
    font-size: 2ex;
    padding: 1ex;
    margin: 0.5ex;
}

/* CHs
1 ch === 1 caracter
*/
.chs {
    background-color: cadetblue;
    width: 10ch;
}

/* PORCENTAJES 
La altura se define por el tamaño del contenido
*/
.percentages {
    background-color: khaki;
    width: 80%;
    font-size: 100%;
    padding: 5%;
    margin: 20% 10%;
}

/* VIEWPORT */

.viewport {
    background-color: darkcyan;
    width: 50vw;
    /* recuerda que la etiqueta tiene margenes por defecto las barras de navegador tambien son parte del viewport */
    width: 100vw;
    /* para evitar el overflow debemos asignar el ancho===width en porcentajes */
    width: 100%;
    height: 50vw;
    height: 100vw;
}

.v-min,
.v-max {
    background-color: darksalmon;
    width: 50vmax;
    height: 50vmin;
    border: thick solid fuchsia;
}

/* CUSTOM PROPS
Las custom properties solo existen en su contexto

si quieremos que la variable exista en todos los elementos la definimos en el root, ya que por especificidad tiene mayor peso que html
*/

.custom-props-1 {
    --primary-color: grey;
    --font-size: 32px;
    background-color: var(--primary-color);
}

.custom-props-3 {
    font-size: var(--font-size);
}

.props-title {
    --primary-color: navy;
    color: var(--primary-color, orange);
}

.ch-10 {
    --padding-size: 2ch;
    --num-ch: 10ch;
    background-color: grey;
    font-size: 2rem;
    padding: var(--padding-size);
    width: calc(var(--num-ch) + var(--padding-size) * 2);
}

/* los espacios son muy importantes en css */

/* funciones min-max */
.min-max {
    background-color: var(--default-backgroud-color);
    color: var(--default-color);
    margin-top: 1rem;
    /* width puede tener mas de dos valores */
    width: min(300px, 20vw);
    height: max(200px, 25vh);
}

html h1 {
    font-size: clamp(2rem, 1rem + 3vw, 3rem);
}

/* FONTS */

.par-font {
    /* define el tipo de fuente */
    font-family: sans-serif;
    /* define el tamaño de fuente */
    font-size: 32px;
    /* es el peso tipografico
    100 Thin
200 Extra Light
300 Light
400 Normal
500 Medium
600 Semi Bold
700 Bold
800 Extra Bold
900 Ultra Bold
 */
    font-weight: bolder;
    /* el estilo de fuente */
    font-style: italic;
    /* capitaliza todo el texto a mayusculas */
    font-variant: small-caps;
    /* line-height === interlineado */
    line-height: 2;
    /* el shorthand es, 'font: font-style font-variant font-weight font-size / line-height and font-family; respetando en orden siempre' */
    font: italic small-caps bold 24px / 1.5 monospace;
}

/* *** formato woff o woff2 - web open font format *** */
@font-face {
    font-family: "chalet";
    src: url("../assets/Chalet.woff") format("woff");
    /* src: url("../assets/Chalet.woff") format("woff"),
        url("../assets/Chalet.ttf") format("ttf"); */
    font-display: swap;
}
@font-face {
    font-family: "pecita";
    src: url("../assets/Pecita.woff") format("woff");
    font-display: swap;
}

.pecita {
    font-family: "pecita", "cursive";
    font-size: 2rem;
}
.chalet {
    font-family: "chalet", "sans-serif";
    font-size: 2rem;
}

/* FONT DISPLAY
auto: muestra la fuente tan pronto como está disponible, pero permite la substitución temporal en caso de una lenta carga.

block: muestra una fuente sustituta hasta que la fuente se haya descargado completamente.

swap: muestra una fuente sustituta hasta que la fuente se haya descargado y validado completamente.

fallback: muestra una fuente sustituta hasta que la fuente se haya descargado y validado completamente, y después muestra la fuente descargada.

optional: muestra la fuente tan pronto como está disponible, pero permite la substitución temporal en caso de una lenta carga. Es equivalente a auto.
*/

/* TEXT STYLES
text-align -> alinear texto
text-decoration -> personaliza decoraciones de texto por defecto
text-indent -> aplica sangrìas
text-overflow -> manejamos el tipo de desbordamiento que queremos que tenga el texto
text-transform -> la primer letra de cada palabra a mayuscula
letter-spacing -> espaciado entre letras
white-space -> nos dice que hacer con los espacios 'white-space:pre;' hace que respete los espacios
word-break -> rompe las palabras dependiendo del espacio que tenga en en viewport
word-spacing -> espaciado entre palabras
writing-mode -> orientacion de escritura
*/

.text-style-1 {
    background-color: blanchedalmond;
    border: thin solid black;
    padding: 1rem;
    width: 50%;
    font-size: 2rem;
    text-align: right;
    text-decoration: overline;
    text-decoration: none;
    text-indent: 3rem;
    text-transform: capitalize;
    text-transform: lowercase;
    text-transform: uppercase;
    letter-spacing: 1rem;
}

.text-overflow-ellipsis {
    background-color: blanchedalmond;
    border: thin solid black;
    padding: 1rem;
    width: 50%;
    font-size: 2rem;
    text-align: right;
    text-decoration: overline;
    text-decoration: none;
    text-indent: 3rem;
    /* debemos tener overflow:hidden y white-space:nonwrap para que funcione text-overflow */
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    word-break: break-all;
}

.word-spacing {
    word-spacing: 2rem;
    writing-mode: vertical-lr;
}

/* BORDES */

.box {
    width: 400px;
    height: 400px;
    margin: 2rem auto;
    border: thick solid red;
    background-color: #000;
}

.border-radius {
    border-radius: 2rem;
    margin-left: auto;
    margin-right: auto;
    border-radius: 1rem;
    border-top-left-radius: 4rem;
    border-top-right-radius: 4rem;
    border-top-left-radius: 4rem;
    border-bottom-left-radius: 4rem;
    border-bottom-right-radius: 4rem;
    border-radius: 4rem 3rem 2rem 1rem;
    border-radius: 2rem;
}

.border-radius-2 {
    /* modo elipse se pueden aplicar cuatro valores a cada division */
    border-radius: 2rem / 4rem;
}

.border-radius-3 {
    border-radius: 50%;
}

.border-radius-4 {
    width: 400px;
    height: 200px;
    border-radius: 50%;
}

.border-radius-5 {
    width: 400px;
    height: 200px;
    border-radius: 50%;
}

.outline {
    text-align: center;
    outline-style: dashed;
    outline-color: chartreuse;
    outline: thick solid blue;
    color: wheat;
    border-width: 20px;
    outline-width: 50px;
    outline-offset: -3rem;
}
/* BACKGROUDS Y PROPIEDADES
backgroud-color -> agregamos color

backgroud-image -> define la imagen de fondo

backgroud-size -> define el tamaño de la imagen de fondo, primer valor x, segundo y cover cambia el tamaño de la imagen para asegurarse que permanesca completamente visible

background-repeat -> define como se repite la imagen de fondo en el elemento

background-position -> define la posicion de la imagen de fondo, primer valor 'x', segundo valor 'y', sino se especifica un segundo valor este serà center

background-clip -> define cuànto debe extenderse el fondo dentro del elemento

background-origin -> define el origen de la imagen

background-attachment -> define còmo se comportorà la imagen de fondo al desplazarse por la pàgina
*/
.box-2 {
    width: 200px;
    height: 200px;
    margin: 2rem auto;
    border: thick dashed red;
}

.bg-color {
    background-color: #0f0;
}

.bg-image {
    background-image: url(../assets/summonroyaledoom.png);
}

.bg-size {
    background-image: url(../assets/summonroyaledoom.png);
    background-size: 300px 200px;
    background-size: 300px;
    background-size: cover;
    background-size: contain;
}

.bg-repeat {
    background-image: url(../assets/summonroyaledoom.png);
    background-size: 100px;
    background-repeat: repeat;
    background-repeat: repeat-x;
    background-repeat: repeat-y;
    background-repeat: no-repeat;
}
/* si usamos palabras reservadas evitar usar medidas, porque no se reconocen */
.bg-position {
    background-image: url(../assets/summonroyaledoom.png);
    background-size: 100px;
    background-repeat: repeat;
    background-repeat: repeat-x;
    background-repeat: repeat-y;
    background-repeat: no-repeat;
    background-position: 10px 20px;
    background-position: 10% center;
    background-position: bottom right;
}

.bg-clip {
    background-color: skyblue;
    background-image: url(../assets/mankind.png);
    background-size: 200px;
    background-repeat: no-repeat;
    /* el backgroud-color empieza desde el padding */
    background-clip: padding-box;
    /* el backgroud-color empieza desde el content */
    background-clip: content-box;
    /* el valor por defecto es border-box */
    padding: 1rem;
}
/* bg-origin nos ayuda a definir el inicio de la imagen de fondo en el elemento, mientras que clip es para el color de fondo */
.bg-origin {
    background-color: skyblue;
    background-image: url(../assets/mankind.png);
    background-size: 200px;
    background-repeat: no-repeat;
    padding: 1rem;
    background-origin: padding-box; /*padding-box es el valor por defecto de 'background-origin'*/
    background-size: cover;
    background-origin: content-box;
}
